
.container{
    display: grid;
    /* height: 600px; */
    grid-template-columns: repeat(autofit,minmax(100px,1fr)) ;
    grid-template-rows: repeat(4,100px);
    /* responsiveness auto-fit */
    /* justify-content: space-between;
    align-content:   space-between; */
    /* justify-items: start ;
    align-items: end; 
    /* grid-template-rows: 100px 100px 100px 100px 100px 100px; */
    /* grid-template-columns: 100px 100px 100px 100px 100px 100px; */
    /* grid-auto-rows:100px ; */
    /* sets the size of rows o any implicit grid that gets created  */
    /* grid-auto-flow: column; */
    /* any implicit grid created will be created as a column instead of rows  */
    /* grid-auto-columns: 100px; */
    /* grid-template-rows: 100px 300px 100px;
    grid-template-columns: 1fr 3fr; */
    /* grid-template-areas:
    'header header'
    'body aside'
    'footer footer'; */

    /* grid-gap: 1em 2em;row column  */
   
/* fr represent fractional value of the available space 
if the values are same it fills up the available space equally
you can mix it with other units e.g 100px 4fr 20px */
/* you canalso set maximum width for the grid 
when it is been streched or shrinked  using min max e.g minmax(100px 3fr)*/
/* repeat notation : takes two arguement
the first argument is the number of times you want to repeat a value 
the 2nd argument the value you want to have repeated*/
/* addding gaps to the grid using grid gap property */

}

.item-1{
    /* grid-row-start:1;
    grid-row-end: 3;
    grid-column-start: 1;
    grid-column-end: 5; */
/* grid-row: 1/3; span can also be used e.g span 2 */
/* grid-column: 1/5; */
background-color: green;
/* justify-self: center; */
/* grid-area: header; */
/* z-index: 1; */
}
.item-2{
    /* grid-row: 4/6;
    grid-column: 3/5; */
    background-color: aqua;
    /* grid-area: header; */
    /* z-index: 1; */
    /* helps position the grid abover other grid */
/* to make a grid stay above another you make use of the z;index */

}
.item-3{
    /* grid-area:3 / 1 / 7/ -1;row start col-start row-end col-end */
    background-color: yellowgreen;
    /* grid-area: main; */
}
.item-4{
    /* grid-area:1 / 5 /3 /7 ; */
    background-color: beige;
    /* grid-area: aside; */
}
/* items added out of the explicity defined grid is referred to as the implicit grid */
/* implicit grid doesnt inherit values set in the grid template rows and column properties  */